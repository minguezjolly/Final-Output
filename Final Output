import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class BankUser {
    private int id;
    private int pin;
    private String name;
    private double balance;

    public BankUser(int id, int pin, String name, double balance) {
        this.id = id;
        this.pin = pin;
        this.name = name;
        this.balance = balance;
    }

    public int getId() {
        return id;
    }

    public boolean verifyPin(int enteredPin) {
        return this.pin == enteredPin;
    }

    public double getBalance() {
        return balance;
    }

    public void addBalance(double amount) {
        this.balance += amount;
    }

    public void transferMoney(BankUser recipient, double amount) {
        if (amount > 0 && amount <= this.balance) {
            this.balance -= amount;
            recipient.addBalance(amount);
            System.out.println("Money transferred successfully!");
        } else {
            System.out.println("Invalid amount or insufficient balance for the transfer.");
        }
    }
}

public class BankingApp {
    private static Map<Integer, BankUser> users = new HashMap<>();
    private static Scanner scanner = new Scanner(System.in);
    private static BankUser loggedInUser;

    public static void main(String[] args) {
        initializeUsers();

        while (true) {
            System.out.println("1. Login\n2. Check Balance\n3. Cash-in\n4. Money Transfer\n5. Exit");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    login();
                    break;
                case 2:
                    checkBalance();
                    break;
                case 3:
                    cashIn();
                    break;
                case 4:
                    moneyTransfer();
                    break;
                case 5:
                    System.out.println("Exiting the Banking App. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void initializeUsers() {
        users.put(412435, new BankUser(412435, 7452, "Chris Sandoval", 32000));
        users.put(264863, new BankUser(264863, 1349, "Marc Yim", 1000));
    }

    private static void login() {
        System.out.println("Enter User ID:");
        int userId = scanner.nextInt();
        System.out.println("Enter PIN:");
        int pin = scanner.nextInt();

        BankUser user = users.get(userId);

        if (user != null && user.verifyPin(pin)) {
            loggedInUser = user;
            System.out.println("Login successful. Welcome, " + loggedInUser.getId());
        } else {
            System.out.println("Invalid User ID or PIN. Please try again.");
        }
    }

    private static void checkBalance() {
        if (loggedInUser != null) {
            System.out.println("Your balance: $" + loggedInUser.getBalance());
        } else {
            System.out.println("You need to log in first.");
        }
    }

    private static void cashIn() {
        if (loggedInUser != null) {
            System.out.println("Enter the amount to add to your balance:");
            double amount = scanner.nextDouble();
            loggedInUser.addBalance(amount);
            System.out.println("Cash-in successful. Your new balance: $" + loggedInUser.getBalance());
        } else {
            System.out.println("You need to log in first.");
        }
    }

    private static void moneyTransfer() {
        if (loggedInUser != null) {
            System.out.println("Enter recipient's User ID:");
            int recipientId = scanner.nextInt();
            BankUser recipient = users.get(recipientId);

            if (recipient != null) {
                System.out.println("Enter the amount to transfer:");
                double amount = scanner.nextDouble();
                loggedInUser.transferMoney(recipient, amount);
            } else {
                System.out.println("Recipient not found. Please check the User ID and try again.");
            }
        } else {
            System.out.println("You need to log in first.");
        }
    }
}
